<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.holoyolo.app.board.mapper.BoardMapper">

	<select id="BoardList" resultType="BoardVO">
	    <![CDATA[
	    SELECT
	        b.board_id, b.title, m.nickname, b.views, COUNT(blk.board_id) AS like_count, b.write_date
	    FROM
	        BOARD b
	        JOIN member m ON b.member_id = m.member_id
	        LEFT JOIN board_like blk ON b.board_id = blk.board_id
	    WHERE
	        b.menu_type = #{menuType}
	    GROUP BY
	        b.title, m.nickname, b.views, b.write_date, b.board_id
	    ORDER BY
	        b.write_date DESC
	    ]]>
	</select>


<select id="searchBoardList" resultType="BoardVO">
    SELECT
        b.board_id, b.title, m.nickname, b.views, COUNT(blk.board_id) AS like_count, b.write_date
    FROM
        BOARD b
        JOIN member m ON b.member_id = m.member_id
        LEFT JOIN board_like blk ON b.board_id = blk.board_id
    WHERE
        b.menu_type = #{menuType}
        <if test="searchOption == 'title'">
            AND b.title LIKE '%'||#{searchWord}||'%'
        </if>
        <if test="searchOption == 'writer'">
            AND m.nickname LIKE '%'||#{searchWord}||'%'
        </if>
    GROUP BY
        b.title, m.nickname, b.views, b.write_date, b.board_id
    ORDER BY
        b.write_date DESC
</select>


	<select id="selectBoard" resultType="BoardVO">
		SELECT 
			b.BOARD_ID AS BOARD_ID,
			b.MENU_TYPE AS MENU_TYPE, 
			b.TITLE AS TITLE, 
			b.CONTENT AS CONTENT,
			b.WRITE_DATE AS WRITE_DATE,
			b.UPDATE_DATE AS UPDATE_DATE,
			b.VIEWS AS VIEWS,
			b.MEMBER_ID AS MEMBER_ID,
			b.CLUB_ID AS CLUB_ID, 
			m.nickname AS nickname
		FROM BOARD b
			JOIN member m ON b.member_id = m.member_id
		WHERE b.board_id = #{board_id}
	</select>

	<insert id="insertBoard" parameterType="BoardVO">
		<selectKey keyProperty="boardId"  resultType="int"  order="BEFORE">
	  		SELECT NVL(MAX(board_id),0) + 1
			FROM board
	  	</selectKey>
		INSERT INTO BOARD(BOARD_ID, MENU_TYPE, TITLE, CONTENT, WRITE_DATE, UPDATE_DATE, VIEWS, MEMBER_ID, CLUB_ID)
		VALUES (#{boardId}, #{menuType}, #{title}, #{content}, sysdate, null, 0,#{memberId}, null)
	</insert>
	
	<update id="updateBoard">
		UPDATE BOARD
		SET 
		 TITLE = #{title}, 
		 CONTENT = #{content},  
		 UPDATE_DATE = sysdate
		WHERE BOARD_ID = #{boardId}
		AND MENU_TYPE = #{menuType} 
	</update>
	


	<delete id="deleteBoard" parameterType="BoardVO">
		DELETE BOARD 
		WHERE BOARD_ID =#{boardId} 
	</delete>




	<select id="searchBoardPaged" resultType="BoardVO" parameterType="int">
	    SELECT title, write_date, 
	    FROM BOARD
	    ORDER BY write_date
	    OFFSET #{start} ROWS FETCH NEXT #{end - start + 1} ROWS ONLY
	</select>

	<select id="getTotalBoardRecords" resultType="int" >
		SELECT COUNT(*)
	    FROM BOARD
	    WHERE MENU_TYPE = #{menuType}
    </select>
    
    
    <select id="getTotalBoardSurfRecords" resultType="int" >
	SELECT COUNT(*)
    FROM BOARD b
    JOIN member m ON b.member_id = m.member_id
    WHERE MENU_TYPE = #{menuType}
       <if test="searchOption == 'title'">
            AND b.title LIKE '%'||#{searchWord}||'%'
        </if>
        <if test="searchOption == 'writer'">
            AND m.nickname LIKE '%'||#{searchWord}||'%'
        </if>
    </select>
    
	<update id="addView" parameterType="BoardVO">
		UPDATE BOARD 
		SET  VIEWS = (
			SELECT MAX(VIEWS) + 1  
			FROM BOARD 
			WHERE BOARD_ID = #{boardId})
		WHERE BOARD_ID = #{boardId}
	</update>
	
	<select id="recentBoradList" resultType="BoardVO">
        SELECT ROWNUM rnum, T.*
        FROM ( SELECT M.nickname, B.*
               FROM board B JOIN member M
               				  ON B.member_id = M.member_id
               WHERE menu_type = #{menuType}
               ORDER BY write_date DESC) T
        WHERE ROWNUM <![CDATA[<=]]> #{page}
	</select>
	
	
	
	<select id="myBoardList" resultType="BoardVO">
	    <![CDATA[
	    SELECT
	        b.board_id, b.title, m.nickname, b.views, COUNT(blk.board_id) AS like_count, b.write_date, b.menu_type
	    FROM
	        BOARD b
	        JOIN member m ON b.member_id = m.member_id
	        LEFT JOIN board_like blk ON b.board_id = blk.board_id
	    WHERE
	        b.member_id = #{memberId}
	    GROUP BY
	        b.title, m.nickname, b.views, b.write_date, b.board_id, b.menu_type
	    ORDER BY
	        b.write_date DESC
	    ]]>
	</select>
	
	<select id="myReplyBoardList" resultType="BoardVO">
	    SELECT b.TITLE, b.BOARD_ID, m.NICKNAME, b.VIEWS, b.MENU_TYPE, b.CONTENT, b.WRITE_DATE, b.UPDATE_DATE, b.MEMBER_ID, COUNT(blk.board_id) AS like_count
	    FROM BOARD b
	         JOIN REPLY r ON b.BOARD_ID = r.BOARD_ID
	         JOIN MEMBER m ON b.MEMBER_ID = m.MEMBER_ID
	         LEFT JOIN board_like blk ON b.BOARD_ID = blk.BOARD_ID
	    WHERE b.BOARD_ID IN (
											        SELECT b.BOARD_ID
											        FROM BOARD b
											             JOIN REPLY r ON b.BOARD_ID = r.BOARD_ID
											             JOIN MEMBER m ON b.MEMBER_ID = m.MEMBER_ID
											             LEFT JOIN board_like blk ON b.BOARD_ID = blk.BOARD_ID
											        WHERE r.MEMBER_ID = #{memberId}
											    )
	    GROUP BY b.TITLE, b.BOARD_ID, m.NICKNAME, b.VIEWS, b.MENU_TYPE, b.CONTENT, b.WRITE_DATE, b.UPDATE_DATE, b.MEMBER_ID
	</select>
  
</mapper>

