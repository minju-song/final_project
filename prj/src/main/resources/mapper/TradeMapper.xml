<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.holoyolo.app.trade.mapper.TradeMapper">

	<select id="selectTradeList" resultType="TradeVO">
		SELECT trade_id
				, title
				, fn_get_code_name(trade_category) as trade_category
				, trade_place
				, fn_get_code_name(trade_type) as trade_type
				, fn_get_code_name(promise_status) as promise_status
				, write_date
		FROM trade
		ORDER BY trade_id
	</select>

	<select id="selectTrade" resultType="TradeVO">
		SELECT t.trade_id
		        , t.title
		        , t.description
		        , fn_get_code_name(trade_category) as trade_category
		        , trade_category as trade_cate_code
		        , t.price
		        , t.open_kakao
		        , t.trade_place
		        , fn_get_code_name(trade_type) as trade_type
		        , trade_type as trade_type_code
		        , t.payment_type
		        , fn_get_code_name(promise_status) as promise_status
		        , t.views
		        , t.write_date
		        , t.latitude
		        , t.longitude
		        , t.buyer_id
		        , t.seller_id
		        , m.profile_img
		        , m.nickname
		FROM trade t JOIN member m
		            ON(t.seller_id = m.member_id)
		WHERE t.trade_id = #{tradeId}
		AND t.seller_id = #{sellerId}
	</select>

	<insert id="insertTrade" parameterType="TradeVO">
		<selectKey keyProperty="tradeId" resultType="int" order="BEFORE">
			SELECT NVL(MAX(trade_id),0) + 1 as tradeId
			FROM trade
		</selectKey>
		INSERT INTO trade
			(
			trade_id
			, title
			, description
			, trade_category
			<if test="price > 0">
				, price
			</if>
			, open_kakao
			<if test="tradePlace != ''">
				, trade_place
			</if>
			, trade_type
			, payment_type
			<if test="latitude != 0">
				, latitude
			</if>
			<if test="longitude != 0">
				, longitude
			</if>
			, seller_id
			)
		VALUES
			(
			#{tradeId}
			, #{title}
			, #{description}
			, #{tradeCategory}
			<if test="price > 0">
				, #{price}
			</if>
			, #{openKakao}
			<if test="tradePlace != ''">
				, #{tradePlace}
			</if>
			, #{tradeType}
			, #{paymentType}
			<if test="latitude != 0">
				, #{latitude}
			</if>
			<if test="longitude != 0">
				, #{longitude}
			</if>
			, #{sellerId}
			)
	</insert>

	<update id="updateTrade" parameterType="TradeVO">
		UPDATE trade
		<set>
			title = #{title},
			description = #{description},
			trade_category = #{tradeCategory},
			price = #{price},
			open_kakao = #{openKakao},
			trade_place = #{tradePlace},
			trade_type = #{tradeType},
			payment = #{payment},
			update_date = sysdate,
			latitude = #{latitude},
			longitude = #{longitude}
		</set>
		WHERE trade_id = #{tradeId}
		AND seller_id = #{sellerId}
	</update>
	
	<update id="updateBuyerId" parameterType="TradeVO">
		UPDATE trade
		<set>
			promise_status = #{promiseStatus},
			buyer_id = #{buyerId},
			update_date = sysdate
		</set>
		WHERE trade_id = #{tradeId}
	</update>
	
	<update id="updateViews">
		UPDATE trade 
		SET views = views + 1
		WHERE trade_id = #{tradeId}
		AND seller_id = #{sellerId}
	</update>

	<delete id="deleteTrade" parameterType="TradeVO">
		DELETE FROM trade
		WHERE
		trade_id = #{tradeId}
		AND seller_id = #{sellerId}
	</delete>
	
	<select id="getAllTradeList" resultType="TradeVO">
		SELECT trade_id
				, title
				, fn_get_code_name(trade_category) as trade_category
				, price
				, trade_place
				, fn_get_code_name(trade_type) as trade_type
				, fn_get_code_name(promise_status) as promise_status
				, write_date
		FROM trade
		ORDER BY write_date	desc
	</select>

	<!-- 중고거래 목록리스트 -->
	<select id="getTradeList" resultType="TradeVO">
		SELECT *
		FROM (
			SELECT rownum rn, a.*
			FROM (
				SELECT t.trade_id
				        , t.title
				        , fn_get_code_name(trade_category) as trade_category
				        , t.price
				        , t.trade_place
				        , fn_get_code_name(trade_type) as trade_type
				        , fn_get_code_name(promise_status) as promise_status
				        , t.write_date
				        , t.seller_id
				        , a.save_file
				FROM trade t JOIN attachment a
				                ON(t.trade_id = a.post_id)
				WHERE a.menu_type = 'AA1'
				AND a.attachment_seq = 1
				<include refid="criteria"></include>
				ORDER BY write_date desc
			) A
			WHERE rownum <![CDATA[<=]]> #{page} * 6
		) B
		WHERE B.rn > (#{page} - 1) * 6
	</select>

	<!-- 검색 시 데이터 총 갯수 -->
	<select id="cntData" parameterType="TradeVO" resultType="int">
		SELECT COUNT(*)
		FROM trade
		<include refid="criteria"></include>
	</select>
	
	<sql id="criteria">		
		<where>
			<if test="search != null and search != ''">
				<if test="searchTitle == 'title'">
					AND title LIKE '%'||#{search}||'%'
				</if>
				<if test="searchTitle == 'tradePlace'">
					AND trade_place LIKE '%'||#{search}||'%'
				</if>
			</if>
			<if test="tradeCategory != null and tradeCategory != ''">
				AND trade_category = #{tradeCategory}
			</if>
			<if test="sellCheck != null and sellCheck.equals('true')">
				AND promise_status <![CDATA[<>]]> 'TD3'
			</if>
		</where>
	</sql>
</mapper>