<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.holoyolo.app.report.mapper.ReportMapper">
  
   	<select id="selectReportTotalList" resultType="ReportVO">
SELECT * 
	FROM (
		SELECT A.* , ROWNUM rn 
		FROM (
			SELECT * FROM (
			    SELECT 
			        report_id,
			        reporter_id,
			        report_content,
			        report_date,
			        fn_get_code_name(report_type) AS report_type,
			        NVL(TO_CHAR(fn_get_code_name(report_process_type)),'신고대기') AS report_process_type
			    FROM report) report
			<where>
				<if test="reportProcessType != null and reportProcessType != ''">
				 report_process_type = #{reportProcessType}
			  	</if>
		  	</where>
			ORDER BY report_id DESC) A) b 
	WHERE rn BETWEEN (#{page}-1)*#{pageUnit} + 1 and #{page} * #{pageUnit}
  	</select>
  	
  	<select id="selectReportTotalCount" resultType="int">
		SELECT COUNT(*) FROM (
			SELECT 
		        report_id,
		        reporter_id,
		        report_content,
		        report_date,
		        fn_get_code_name(report_type) AS report_type,
		        fn_get_code_name(report_process_type) AS report_process_type
			FROM report) report
		<where>
			<if test="reportProcessType != null and reportProcessType != ''">
			 	report_process_type = #{reportProcessType}
		  	</if>
		</where>
	</select>
  
  	<select id="selectReportInfo" resultType="reportVO">
  		SELECT
		    report_id
		  , fn_get_code_name(menu_type) AS menu_type
		  , post_id
		  , report_content
		  , fn_get_code_name(report_type) AS report_type
		  , report_date
		  , NVL(TO_CHAR(fn_get_code_name(report_process_type)),'신고대기') AS report_process_type
		  , process_comment
		  , process_date
		  , reporter_id
		  , reported_id
		FROM report
		WHERE report_id = #{reportId}
  	</select>
  	
  	<update id="updateReportReason" parameterType="ReportVO">
  		UPDATE report SET
                report_process_type = #{reportProcessType},
                process_comment = COALESCE(#{processComment}, '')
		WHERE report_id = #{reportId}
  	</update>
  	
  	<insert id="insertReportInfo" parameterType="ReportVO">
		<selectKey keyProperty="reportId"  resultType="int"  order="BEFORE">
	  		SELECT NVL(MAX(report_id),0) + 1
			FROM report
	  	</selectKey>
		INSERT INTO REPORT(REPORT_ID, MENU_TYPE, POST_ID, REPORT_TYPE, REPORT_DATE, REPORT_PROCESS_TYPE, PROCESS_COMMENT, PROCESS_DATE, REPORTED_ID, REPORTER_ID, REPORT_CONTENT)
		VALUES (#{reportId}, #{menuType}, #{postId}, #{reportType}, sysdate, null, null, null, #{reportedId}, #{reporterId}, #{reportContent})
	</insert>
	
	<insert id="insertReport" parameterType="ReportVO">
		<selectKey keyProperty="reportId" resultType="int" order="BEFORE">
			SELECT NVL(MAX(report_id),0) + 1 as reportId
			FROM report
		</selectKey>
		INSERT INTO report
			(
				report_id
				, menu_type
				, post_id
				, report_type
				, report_date
				, reporter_id
				, reported_id
				, report_content
			)
		VALUES
			(
				#{reportId}
				, #{menuType}
				, #{postId}
				, #{reportType}
				, sysdate
				, #{reporterId}
				, #{reportedId}
				, #{reportContent}
			)
	</insert>
	
		<!-- 신고 횟수 ++ -->
	<update id="updateMemberReportCnt" parameterType="String">
		update member
		set report_cnt = report_cnt + 1
		where member_id = #{reportedId}
	</update>
	<!-- 신고 횟수 리셋 -->
	<update id="updateMemberReportCntReset" parameterType="String">
		update member
		set report_cnt = 0
		where member_id = #{reportedId}
	</update>
  </mapper>